apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      # Target less utilized nodes
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - lke495845-714687-266de3a20000  # Most available node
                - lke495845-714687-0c1107670000   # Second most available
                - lke495845-714687-5e1585020000   # Third option
      # Init container to fix permissions
      initContainers:
      - name: fix-permissions
        image: alpine:3.18
        command:
        - sh
        - -c
        - |
          chown -R 999:999 /data
          chmod -R 755 /data
        volumeMounts:
        - name: redis-data
          mountPath: /data
        securityContext:
          runAsUser: 0
      containers:
      - name: redis
        image: redis:7.2-alpine
        ports:
        - containerPort: 6379
          name: redis
        # Small resource configuration
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        # Redis configuration
        command:
        - redis-server
        - --appendonly
        - "yes"
        - --save
        - "900 1"
        - --save
        - "300 10"
        - --save
        - "60 10000"
        - --maxmemory
        - "768mb"
        - --maxmemory-policy
        - "allkeys-lru"
        # Health checks
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        # Volume mount for persistence
        volumeMounts:
        - name: redis-data
          mountPath: /data
        # Security context
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          runAsGroup: 999
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
      volumes:
      - name: redis-data
        persistentVolumeClaim:
          claimName: redis-data
      # Restart policy
      restartPolicy: Always