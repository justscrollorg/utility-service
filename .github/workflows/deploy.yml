name: Deploy to Kubernetes

on:
  workflow_run:
    workflows: ["Build and Push Utility Service"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'
      
      - name: Configure kubectl (Linode LKE)
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig
          export KUBECONFIG=kubeconfig
          kubectl config view
          kubectl get nodes
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
      
      - name: Deploy to Kubernetes
        run: |
          export KUBECONFIG=kubeconfig
          kubectl apply -f k8s/namespace.yaml
          kubectl apply -f k8s/deployment.yaml -n utility-service
          kubectl apply -f k8s/service.yaml -n utility-service
          
          # Wait for rollout to complete
          kubectl rollout status deployment/utility-service -n utility-service --timeout=300s
          
          # Show deployment status
          kubectl get pods -n utility-service
          kubectl get svc -n utility-service
        env:
          KUBECONFIG: kubeconfig
      
      - name: Verify deployment
        run: |
          export KUBECONFIG=kubeconfig
          # Check if pods are running
          kubectl get pods -n utility-service -o jsonpath='{.items[*].status.phase}' | grep -q "Running"
          
          # Get service details
          kubectl describe svc utility-service -n utility-service
        env:
          KUBECONFIG: kubeconfig
      
      - name: Cleanup kubeconfig
        if: always()
        run: rm -f kubeconfig
