name: Build and Push Utility Services

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Which service to build'
        required: true
        default: 'both'
        type: choice
        options:
        - both
        - grpcutils
        - gflow-etl

jobs:
  build-test-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.1'
          cache: true
          cache-dependency-path: |
            grpcutils/go.sum
            gflow-etl/go.sum
      
      - name: Setup protoc
        uses: arduino/setup-protoc@v3
        with:
          version: "25.x"
          
      - name: Install Go protobuf plugins
        run: |
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
      
      - name: Generate protobuf & test grpcutils
        if: github.event.inputs.service == 'grpcutils' || github.event.inputs.service == 'both'
        working-directory: ./grpcutils
        run: |
          protoc --go_out=. --go_opt=paths=source_relative \
                 --go-grpc_out=. --go-grpc_opt=paths=source_relative \
                 hello/proto/hello.proto
          go test -v ./...
      
      - name: Test gflow-etl
        if: github.event.inputs.service == 'gflow-etl' || github.event.inputs.service == 'both'
        working-directory: ./gflow-etl
        run: |
          go mod tidy
          go test -v ./...
      
      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
      
      - name: Build and Push grpcutils Docker Image
        if: (github.event.inputs.service == 'grpcutils' || github.event.inputs.service == 'both') && github.event_name != 'pull_request'
        working-directory: ./grpcutils
        run: |
          docker build -t justscroll/grpcutils:latest .
          docker push justscroll/grpcutils:latest
      
      - name: Build and Push gflow-etl Docker Image (with messaging-demo)
        if: (github.event.inputs.service == 'gflow-etl' || github.event.inputs.service == 'both') && github.event_name != 'pull_request'
        working-directory: ./gflow-etl
        run: |
          # Build all binaries before Docker build
          go build -o gflow-etl cmd/gflow-etl/main.go
          go build -o messaging-demo cmd/messaging-demo/main.go
          go build -o producer cmd/producer/main.go
          go build -o producer-prod cmd/producer-prod/main.go
          
          # Build and push Docker image with all binaries
          docker build -t justscroll/gflow-etl:latest .
          docker push justscroll/gflow-etl:latest
