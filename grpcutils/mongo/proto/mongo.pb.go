// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v3.21.12
// source: mongo/proto/mongo.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Common types
type Document struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JsonData      string                 `protobuf:"bytes,1,opt,name=json_data,json=jsonData,proto3" json:"json_data,omitempty"` // JSON string representation of the document
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Document) Reset() {
	*x = Document{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{0}
}

func (x *Document) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type Filter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JsonFilter    string                 `protobuf:"bytes,1,opt,name=json_filter,json=jsonFilter,proto3" json:"json_filter,omitempty"` // JSON string representation of MongoDB filter
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Filter) Reset() {
	*x = Filter{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Filter) ProtoMessage() {}

func (x *Filter) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Filter.ProtoReflect.Descriptor instead.
func (*Filter) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{1}
}

func (x *Filter) GetJsonFilter() string {
	if x != nil {
		return x.JsonFilter
	}
	return ""
}

type Update struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JsonUpdate    string                 `protobuf:"bytes,1,opt,name=json_update,json=jsonUpdate,proto3" json:"json_update,omitempty"` // JSON string representation of MongoDB update operations
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Update) Reset() {
	*x = Update{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Update) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Update) ProtoMessage() {}

func (x *Update) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Update.ProtoReflect.Descriptor instead.
func (*Update) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{2}
}

func (x *Update) GetJsonUpdate() string {
	if x != nil {
		return x.JsonUpdate
	}
	return ""
}

// Database listing
type ListDatabasesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatabasesRequest) Reset() {
	*x = ListDatabasesRequest{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatabasesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabasesRequest) ProtoMessage() {}

func (x *ListDatabasesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabasesRequest.ProtoReflect.Descriptor instead.
func (*ListDatabasesRequest) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{3}
}

type DatabaseInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	SizeOnDisk    int64                  `protobuf:"varint,2,opt,name=size_on_disk,json=sizeOnDisk,proto3" json:"size_on_disk,omitempty"`
	Empty         bool                   `protobuf:"varint,3,opt,name=empty,proto3" json:"empty,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DatabaseInfo) Reset() {
	*x = DatabaseInfo{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DatabaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DatabaseInfo) ProtoMessage() {}

func (x *DatabaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DatabaseInfo.ProtoReflect.Descriptor instead.
func (*DatabaseInfo) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{4}
}

func (x *DatabaseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DatabaseInfo) GetSizeOnDisk() int64 {
	if x != nil {
		return x.SizeOnDisk
	}
	return 0
}

func (x *DatabaseInfo) GetEmpty() bool {
	if x != nil {
		return x.Empty
	}
	return false
}

type ListDatabasesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Databases     []*DatabaseInfo        `protobuf:"bytes,1,rep,name=databases,proto3" json:"databases,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDatabasesResponse) Reset() {
	*x = ListDatabasesResponse{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDatabasesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDatabasesResponse) ProtoMessage() {}

func (x *ListDatabasesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDatabasesResponse.ProtoReflect.Descriptor instead.
func (*ListDatabasesResponse) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{5}
}

func (x *ListDatabasesResponse) GetDatabases() []*DatabaseInfo {
	if x != nil {
		return x.Databases
	}
	return nil
}

func (x *ListDatabasesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListDatabasesResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Collection listing
type ListCollectionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionsRequest) Reset() {
	*x = ListCollectionsRequest{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsRequest) ProtoMessage() {}

func (x *ListCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsRequest.ProtoReflect.Descriptor instead.
func (*ListCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{6}
}

func (x *ListCollectionsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

type CollectionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Options       map[string]string      `protobuf:"bytes,3,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectionInfo) Reset() {
	*x = CollectionInfo{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionInfo) ProtoMessage() {}

func (x *CollectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionInfo.ProtoReflect.Descriptor instead.
func (*CollectionInfo) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{7}
}

func (x *CollectionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CollectionInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CollectionInfo) GetOptions() map[string]string {
	if x != nil {
		return x.Options
	}
	return nil
}

type ListCollectionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Collections   []*CollectionInfo      `protobuf:"bytes,1,rep,name=collections,proto3" json:"collections,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionsResponse) Reset() {
	*x = ListCollectionsResponse{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse) ProtoMessage() {}

func (x *ListCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsResponse.ProtoReflect.Descriptor instead.
func (*ListCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{8}
}

func (x *ListCollectionsResponse) GetCollections() []*CollectionInfo {
	if x != nil {
		return x.Collections
	}
	return nil
}

func (x *ListCollectionsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListCollectionsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Insert operations
type InsertDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection    string                 `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Document      *Document              `protobuf:"bytes,3,opt,name=document,proto3" json:"document,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertDocumentRequest) Reset() {
	*x = InsertDocumentRequest{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertDocumentRequest) ProtoMessage() {}

func (x *InsertDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertDocumentRequest.ProtoReflect.Descriptor instead.
func (*InsertDocumentRequest) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{9}
}

func (x *InsertDocumentRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *InsertDocumentRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *InsertDocumentRequest) GetDocument() *Document {
	if x != nil {
		return x.Document
	}
	return nil
}

type InsertDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InsertedId    string                 `protobuf:"bytes,1,opt,name=inserted_id,json=insertedId,proto3" json:"inserted_id,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertDocumentResponse) Reset() {
	*x = InsertDocumentResponse{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertDocumentResponse) ProtoMessage() {}

func (x *InsertDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertDocumentResponse.ProtoReflect.Descriptor instead.
func (*InsertDocumentResponse) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{10}
}

func (x *InsertDocumentResponse) GetInsertedId() string {
	if x != nil {
		return x.InsertedId
	}
	return ""
}

func (x *InsertDocumentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InsertDocumentResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type InsertManyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection    string                 `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Documents     []*Document            `protobuf:"bytes,3,rep,name=documents,proto3" json:"documents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertManyRequest) Reset() {
	*x = InsertManyRequest{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertManyRequest) ProtoMessage() {}

func (x *InsertManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertManyRequest.ProtoReflect.Descriptor instead.
func (*InsertManyRequest) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{11}
}

func (x *InsertManyRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *InsertManyRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *InsertManyRequest) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

type InsertManyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InsertedIds   []string               `protobuf:"bytes,1,rep,name=inserted_ids,json=insertedIds,proto3" json:"inserted_ids,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertManyResponse) Reset() {
	*x = InsertManyResponse{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertManyResponse) ProtoMessage() {}

func (x *InsertManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertManyResponse.ProtoReflect.Descriptor instead.
func (*InsertManyResponse) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{12}
}

func (x *InsertManyResponse) GetInsertedIds() []string {
	if x != nil {
		return x.InsertedIds
	}
	return nil
}

func (x *InsertManyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InsertManyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Find operations
type FindDocumentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection    string                 `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *Filter                `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Limit         int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"` // 0 means no limit
	Skip          int32                  `protobuf:"varint,5,opt,name=skip,proto3" json:"skip,omitempty"`   // For pagination
	Sort          string                 `protobuf:"bytes,6,opt,name=sort,proto3" json:"sort,omitempty"`    // JSON string for sort specification
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindDocumentsRequest) Reset() {
	*x = FindDocumentsRequest{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDocumentsRequest) ProtoMessage() {}

func (x *FindDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDocumentsRequest.ProtoReflect.Descriptor instead.
func (*FindDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{13}
}

func (x *FindDocumentsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *FindDocumentsRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *FindDocumentsRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *FindDocumentsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindDocumentsRequest) GetSkip() int32 {
	if x != nil {
		return x.Skip
	}
	return 0
}

func (x *FindDocumentsRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type FindDocumentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Documents     []*Document            `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Count         int32                  `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"` // Number of documents returned
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FindDocumentsResponse) Reset() {
	*x = FindDocumentsResponse{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FindDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindDocumentsResponse) ProtoMessage() {}

func (x *FindDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindDocumentsResponse.ProtoReflect.Descriptor instead.
func (*FindDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{14}
}

func (x *FindDocumentsResponse) GetDocuments() []*Document {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *FindDocumentsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FindDocumentsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *FindDocumentsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

// Update operations
type UpdateDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection    string                 `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *Filter                `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	Update        *Update                `protobuf:"bytes,4,opt,name=update,proto3" json:"update,omitempty"`
	Upsert        bool                   `protobuf:"varint,5,opt,name=upsert,proto3" json:"upsert,omitempty"`                           // Create if not exists
	UpdateMany    bool                   `protobuf:"varint,6,opt,name=update_many,json=updateMany,proto3" json:"update_many,omitempty"` // Update multiple documents
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDocumentRequest) Reset() {
	*x = UpdateDocumentRequest{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocumentRequest) ProtoMessage() {}

func (x *UpdateDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocumentRequest.ProtoReflect.Descriptor instead.
func (*UpdateDocumentRequest) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateDocumentRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *UpdateDocumentRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *UpdateDocumentRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *UpdateDocumentRequest) GetUpdate() *Update {
	if x != nil {
		return x.Update
	}
	return nil
}

func (x *UpdateDocumentRequest) GetUpsert() bool {
	if x != nil {
		return x.Upsert
	}
	return false
}

func (x *UpdateDocumentRequest) GetUpdateMany() bool {
	if x != nil {
		return x.UpdateMany
	}
	return false
}

type UpdateDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MatchedCount  int64                  `protobuf:"varint,1,opt,name=matched_count,json=matchedCount,proto3" json:"matched_count,omitempty"`
	ModifiedCount int64                  `protobuf:"varint,2,opt,name=modified_count,json=modifiedCount,proto3" json:"modified_count,omitempty"`
	UpsertedCount int64                  `protobuf:"varint,3,opt,name=upserted_count,json=upsertedCount,proto3" json:"upserted_count,omitempty"`
	UpsertedId    string                 `protobuf:"bytes,4,opt,name=upserted_id,json=upsertedId,proto3" json:"upserted_id,omitempty"`
	Success       bool                   `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateDocumentResponse) Reset() {
	*x = UpdateDocumentResponse{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateDocumentResponse) ProtoMessage() {}

func (x *UpdateDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateDocumentResponse.ProtoReflect.Descriptor instead.
func (*UpdateDocumentResponse) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{16}
}

func (x *UpdateDocumentResponse) GetMatchedCount() int64 {
	if x != nil {
		return x.MatchedCount
	}
	return 0
}

func (x *UpdateDocumentResponse) GetModifiedCount() int64 {
	if x != nil {
		return x.ModifiedCount
	}
	return 0
}

func (x *UpdateDocumentResponse) GetUpsertedCount() int64 {
	if x != nil {
		return x.UpsertedCount
	}
	return 0
}

func (x *UpdateDocumentResponse) GetUpsertedId() string {
	if x != nil {
		return x.UpsertedId
	}
	return ""
}

func (x *UpdateDocumentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateDocumentResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Delete operations
type DeleteDocumentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection    string                 `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *Filter                `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	DeleteMany    bool                   `protobuf:"varint,4,opt,name=delete_many,json=deleteMany,proto3" json:"delete_many,omitempty"` // Delete multiple documents
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDocumentRequest) Reset() {
	*x = DeleteDocumentRequest{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentRequest) ProtoMessage() {}

func (x *DeleteDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentRequest.ProtoReflect.Descriptor instead.
func (*DeleteDocumentRequest) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteDocumentRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteDocumentRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteDocumentRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *DeleteDocumentRequest) GetDeleteMany() bool {
	if x != nil {
		return x.DeleteMany
	}
	return false
}

type DeleteDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeletedCount  int64                  `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDocumentResponse) Reset() {
	*x = DeleteDocumentResponse{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentResponse) ProtoMessage() {}

func (x *DeleteDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentResponse.ProtoReflect.Descriptor instead.
func (*DeleteDocumentResponse) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{18}
}

func (x *DeleteDocumentResponse) GetDeletedCount() int64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *DeleteDocumentResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteDocumentResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

type DeleteManyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection    string                 `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *Filter                `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteManyRequest) Reset() {
	*x = DeleteManyRequest{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteManyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManyRequest) ProtoMessage() {}

func (x *DeleteManyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManyRequest.ProtoReflect.Descriptor instead.
func (*DeleteManyRequest) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteManyRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *DeleteManyRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *DeleteManyRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type DeleteManyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeletedCount  int64                  `protobuf:"varint,1,opt,name=deleted_count,json=deletedCount,proto3" json:"deleted_count,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteManyResponse) Reset() {
	*x = DeleteManyResponse{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteManyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteManyResponse) ProtoMessage() {}

func (x *DeleteManyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteManyResponse.ProtoReflect.Descriptor instead.
func (*DeleteManyResponse) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{20}
}

func (x *DeleteManyResponse) GetDeletedCount() int64 {
	if x != nil {
		return x.DeletedCount
	}
	return 0
}

func (x *DeleteManyResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteManyResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// Count operations
type CountDocumentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Database      string                 `protobuf:"bytes,1,opt,name=database,proto3" json:"database,omitempty"`
	Collection    string                 `protobuf:"bytes,2,opt,name=collection,proto3" json:"collection,omitempty"`
	Filter        *Filter                `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountDocumentsRequest) Reset() {
	*x = CountDocumentsRequest{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountDocumentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDocumentsRequest) ProtoMessage() {}

func (x *CountDocumentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDocumentsRequest.ProtoReflect.Descriptor instead.
func (*CountDocumentsRequest) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{21}
}

func (x *CountDocumentsRequest) GetDatabase() string {
	if x != nil {
		return x.Database
	}
	return ""
}

func (x *CountDocumentsRequest) GetCollection() string {
	if x != nil {
		return x.Collection
	}
	return ""
}

func (x *CountDocumentsRequest) GetFilter() *Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type CountDocumentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int64                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CountDocumentsResponse) Reset() {
	*x = CountDocumentsResponse{}
	mi := &file_mongo_proto_mongo_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CountDocumentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountDocumentsResponse) ProtoMessage() {}

func (x *CountDocumentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mongo_proto_mongo_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountDocumentsResponse.ProtoReflect.Descriptor instead.
func (*CountDocumentsResponse) Descriptor() ([]byte, []int) {
	return file_mongo_proto_mongo_proto_rawDescGZIP(), []int{22}
}

func (x *CountDocumentsResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CountDocumentsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CountDocumentsResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

var File_mongo_proto_mongo_proto protoreflect.FileDescriptor

const file_mongo_proto_mongo_proto_rawDesc = "" +
	"\n" +
	"\x17mongo/proto/mongo.proto\x12\x05mongo\"'\n" +
	"\bDocument\x12\x1b\n" +
	"\tjson_data\x18\x01 \x01(\tR\bjsonData\")\n" +
	"\x06Filter\x12\x1f\n" +
	"\vjson_filter\x18\x01 \x01(\tR\n" +
	"jsonFilter\")\n" +
	"\x06Update\x12\x1f\n" +
	"\vjson_update\x18\x01 \x01(\tR\n" +
	"jsonUpdate\"\x16\n" +
	"\x14ListDatabasesRequest\"Z\n" +
	"\fDatabaseInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\fsize_on_disk\x18\x02 \x01(\x03R\n" +
	"sizeOnDisk\x12\x14\n" +
	"\x05empty\x18\x03 \x01(\bR\x05empty\"\x89\x01\n" +
	"\x15ListDatabasesResponse\x121\n" +
	"\tdatabases\x18\x01 \x03(\v2\x13.mongo.DatabaseInfoR\tdatabases\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"4\n" +
	"\x16ListCollectionsRequest\x12\x1a\n" +
	"\bdatabase\x18\x01 \x01(\tR\bdatabase\"\xb2\x01\n" +
	"\x0eCollectionInfo\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12<\n" +
	"\aoptions\x18\x03 \x03(\v2\".mongo.CollectionInfo.OptionsEntryR\aoptions\x1a:\n" +
	"\fOptionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x91\x01\n" +
	"\x17ListCollectionsResponse\x127\n" +
	"\vcollections\x18\x01 \x03(\v2\x15.mongo.CollectionInfoR\vcollections\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\x80\x01\n" +
	"\x15InsertDocumentRequest\x12\x1a\n" +
	"\bdatabase\x18\x01 \x01(\tR\bdatabase\x12\x1e\n" +
	"\n" +
	"collection\x18\x02 \x01(\tR\n" +
	"collection\x12+\n" +
	"\bdocument\x18\x03 \x01(\v2\x0f.mongo.DocumentR\bdocument\"x\n" +
	"\x16InsertDocumentResponse\x12\x1f\n" +
	"\vinserted_id\x18\x01 \x01(\tR\n" +
	"insertedId\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"~\n" +
	"\x11InsertManyRequest\x12\x1a\n" +
	"\bdatabase\x18\x01 \x01(\tR\bdatabase\x12\x1e\n" +
	"\n" +
	"collection\x18\x02 \x01(\tR\n" +
	"collection\x12-\n" +
	"\tdocuments\x18\x03 \x03(\v2\x0f.mongo.DocumentR\tdocuments\"v\n" +
	"\x12InsertManyResponse\x12!\n" +
	"\finserted_ids\x18\x01 \x03(\tR\vinsertedIds\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"\xb7\x01\n" +
	"\x14FindDocumentsRequest\x12\x1a\n" +
	"\bdatabase\x18\x01 \x01(\tR\bdatabase\x12\x1e\n" +
	"\n" +
	"collection\x18\x02 \x01(\tR\n" +
	"collection\x12%\n" +
	"\x06filter\x18\x03 \x01(\v2\r.mongo.FilterR\x06filter\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x12\n" +
	"\x04skip\x18\x05 \x01(\x05R\x04skip\x12\x12\n" +
	"\x04sort\x18\x06 \x01(\tR\x04sort\"\x9b\x01\n" +
	"\x15FindDocumentsResponse\x12-\n" +
	"\tdocuments\x18\x01 \x03(\v2\x0f.mongo.DocumentR\tdocuments\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12\x14\n" +
	"\x05count\x18\x04 \x01(\x05R\x05count\"\xda\x01\n" +
	"\x15UpdateDocumentRequest\x12\x1a\n" +
	"\bdatabase\x18\x01 \x01(\tR\bdatabase\x12\x1e\n" +
	"\n" +
	"collection\x18\x02 \x01(\tR\n" +
	"collection\x12%\n" +
	"\x06filter\x18\x03 \x01(\v2\r.mongo.FilterR\x06filter\x12%\n" +
	"\x06update\x18\x04 \x01(\v2\r.mongo.UpdateR\x06update\x12\x16\n" +
	"\x06upsert\x18\x05 \x01(\bR\x06upsert\x12\x1f\n" +
	"\vupdate_many\x18\x06 \x01(\bR\n" +
	"updateMany\"\xeb\x01\n" +
	"\x16UpdateDocumentResponse\x12#\n" +
	"\rmatched_count\x18\x01 \x01(\x03R\fmatchedCount\x12%\n" +
	"\x0emodified_count\x18\x02 \x01(\x03R\rmodifiedCount\x12%\n" +
	"\x0eupserted_count\x18\x03 \x01(\x03R\rupsertedCount\x12\x1f\n" +
	"\vupserted_id\x18\x04 \x01(\tR\n" +
	"upsertedId\x12\x18\n" +
	"\asuccess\x18\x05 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\"\x9b\x01\n" +
	"\x15DeleteDocumentRequest\x12\x1a\n" +
	"\bdatabase\x18\x01 \x01(\tR\bdatabase\x12\x1e\n" +
	"\n" +
	"collection\x18\x02 \x01(\tR\n" +
	"collection\x12%\n" +
	"\x06filter\x18\x03 \x01(\v2\r.mongo.FilterR\x06filter\x12\x1f\n" +
	"\vdelete_many\x18\x04 \x01(\bR\n" +
	"deleteMany\"|\n" +
	"\x16DeleteDocumentResponse\x12#\n" +
	"\rdeleted_count\x18\x01 \x01(\x03R\fdeletedCount\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"v\n" +
	"\x11DeleteManyRequest\x12\x1a\n" +
	"\bdatabase\x18\x01 \x01(\tR\bdatabase\x12\x1e\n" +
	"\n" +
	"collection\x18\x02 \x01(\tR\n" +
	"collection\x12%\n" +
	"\x06filter\x18\x03 \x01(\v2\r.mongo.FilterR\x06filter\"x\n" +
	"\x12DeleteManyResponse\x12#\n" +
	"\rdeleted_count\x18\x01 \x01(\x03R\fdeletedCount\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\"z\n" +
	"\x15CountDocumentsRequest\x12\x1a\n" +
	"\bdatabase\x18\x01 \x01(\tR\bdatabase\x12\x1e\n" +
	"\n" +
	"collection\x18\x02 \x01(\tR\n" +
	"collection\x12%\n" +
	"\x06filter\x18\x03 \x01(\v2\r.mongo.FilterR\x06filter\"m\n" +
	"\x16CountDocumentsResponse\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x03R\x05count\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage2\xcc\x05\n" +
	"\fMongoService\x12L\n" +
	"\rListDatabases\x12\x1b.mongo.ListDatabasesRequest\x1a\x1c.mongo.ListDatabasesResponse\"\x00\x12R\n" +
	"\x0fListCollections\x12\x1d.mongo.ListCollectionsRequest\x1a\x1e.mongo.ListCollectionsResponse\"\x00\x12O\n" +
	"\x0eInsertDocument\x12\x1c.mongo.InsertDocumentRequest\x1a\x1d.mongo.InsertDocumentResponse\"\x00\x12L\n" +
	"\rFindDocuments\x12\x1b.mongo.FindDocumentsRequest\x1a\x1c.mongo.FindDocumentsResponse\"\x00\x12O\n" +
	"\x0eUpdateDocument\x12\x1c.mongo.UpdateDocumentRequest\x1a\x1d.mongo.UpdateDocumentResponse\"\x00\x12O\n" +
	"\x0eDeleteDocument\x12\x1c.mongo.DeleteDocumentRequest\x1a\x1d.mongo.DeleteDocumentResponse\"\x00\x12C\n" +
	"\n" +
	"InsertMany\x12\x18.mongo.InsertManyRequest\x1a\x19.mongo.InsertManyResponse\"\x00\x12C\n" +
	"\n" +
	"DeleteMany\x12\x18.mongo.DeleteManyRequest\x1a\x19.mongo.DeleteManyResponse\"\x00\x12O\n" +
	"\x0eCountDocuments\x12\x1c.mongo.CountDocumentsRequest\x1a\x1d.mongo.CountDocumentsResponse\"\x00B@Z>github.com/justscrollorg/utility-service/grpcutils/mongo/protob\x06proto3"

var (
	file_mongo_proto_mongo_proto_rawDescOnce sync.Once
	file_mongo_proto_mongo_proto_rawDescData []byte
)

func file_mongo_proto_mongo_proto_rawDescGZIP() []byte {
	file_mongo_proto_mongo_proto_rawDescOnce.Do(func() {
		file_mongo_proto_mongo_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_mongo_proto_mongo_proto_rawDesc), len(file_mongo_proto_mongo_proto_rawDesc)))
	})
	return file_mongo_proto_mongo_proto_rawDescData
}

var file_mongo_proto_mongo_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_mongo_proto_mongo_proto_goTypes = []any{
	(*Document)(nil),                // 0: mongo.Document
	(*Filter)(nil),                  // 1: mongo.Filter
	(*Update)(nil),                  // 2: mongo.Update
	(*ListDatabasesRequest)(nil),    // 3: mongo.ListDatabasesRequest
	(*DatabaseInfo)(nil),            // 4: mongo.DatabaseInfo
	(*ListDatabasesResponse)(nil),   // 5: mongo.ListDatabasesResponse
	(*ListCollectionsRequest)(nil),  // 6: mongo.ListCollectionsRequest
	(*CollectionInfo)(nil),          // 7: mongo.CollectionInfo
	(*ListCollectionsResponse)(nil), // 8: mongo.ListCollectionsResponse
	(*InsertDocumentRequest)(nil),   // 9: mongo.InsertDocumentRequest
	(*InsertDocumentResponse)(nil),  // 10: mongo.InsertDocumentResponse
	(*InsertManyRequest)(nil),       // 11: mongo.InsertManyRequest
	(*InsertManyResponse)(nil),      // 12: mongo.InsertManyResponse
	(*FindDocumentsRequest)(nil),    // 13: mongo.FindDocumentsRequest
	(*FindDocumentsResponse)(nil),   // 14: mongo.FindDocumentsResponse
	(*UpdateDocumentRequest)(nil),   // 15: mongo.UpdateDocumentRequest
	(*UpdateDocumentResponse)(nil),  // 16: mongo.UpdateDocumentResponse
	(*DeleteDocumentRequest)(nil),   // 17: mongo.DeleteDocumentRequest
	(*DeleteDocumentResponse)(nil),  // 18: mongo.DeleteDocumentResponse
	(*DeleteManyRequest)(nil),       // 19: mongo.DeleteManyRequest
	(*DeleteManyResponse)(nil),      // 20: mongo.DeleteManyResponse
	(*CountDocumentsRequest)(nil),   // 21: mongo.CountDocumentsRequest
	(*CountDocumentsResponse)(nil),  // 22: mongo.CountDocumentsResponse
	nil,                             // 23: mongo.CollectionInfo.OptionsEntry
}
var file_mongo_proto_mongo_proto_depIdxs = []int32{
	4,  // 0: mongo.ListDatabasesResponse.databases:type_name -> mongo.DatabaseInfo
	23, // 1: mongo.CollectionInfo.options:type_name -> mongo.CollectionInfo.OptionsEntry
	7,  // 2: mongo.ListCollectionsResponse.collections:type_name -> mongo.CollectionInfo
	0,  // 3: mongo.InsertDocumentRequest.document:type_name -> mongo.Document
	0,  // 4: mongo.InsertManyRequest.documents:type_name -> mongo.Document
	1,  // 5: mongo.FindDocumentsRequest.filter:type_name -> mongo.Filter
	0,  // 6: mongo.FindDocumentsResponse.documents:type_name -> mongo.Document
	1,  // 7: mongo.UpdateDocumentRequest.filter:type_name -> mongo.Filter
	2,  // 8: mongo.UpdateDocumentRequest.update:type_name -> mongo.Update
	1,  // 9: mongo.DeleteDocumentRequest.filter:type_name -> mongo.Filter
	1,  // 10: mongo.DeleteManyRequest.filter:type_name -> mongo.Filter
	1,  // 11: mongo.CountDocumentsRequest.filter:type_name -> mongo.Filter
	3,  // 12: mongo.MongoService.ListDatabases:input_type -> mongo.ListDatabasesRequest
	6,  // 13: mongo.MongoService.ListCollections:input_type -> mongo.ListCollectionsRequest
	9,  // 14: mongo.MongoService.InsertDocument:input_type -> mongo.InsertDocumentRequest
	13, // 15: mongo.MongoService.FindDocuments:input_type -> mongo.FindDocumentsRequest
	15, // 16: mongo.MongoService.UpdateDocument:input_type -> mongo.UpdateDocumentRequest
	17, // 17: mongo.MongoService.DeleteDocument:input_type -> mongo.DeleteDocumentRequest
	11, // 18: mongo.MongoService.InsertMany:input_type -> mongo.InsertManyRequest
	19, // 19: mongo.MongoService.DeleteMany:input_type -> mongo.DeleteManyRequest
	21, // 20: mongo.MongoService.CountDocuments:input_type -> mongo.CountDocumentsRequest
	5,  // 21: mongo.MongoService.ListDatabases:output_type -> mongo.ListDatabasesResponse
	8,  // 22: mongo.MongoService.ListCollections:output_type -> mongo.ListCollectionsResponse
	10, // 23: mongo.MongoService.InsertDocument:output_type -> mongo.InsertDocumentResponse
	14, // 24: mongo.MongoService.FindDocuments:output_type -> mongo.FindDocumentsResponse
	16, // 25: mongo.MongoService.UpdateDocument:output_type -> mongo.UpdateDocumentResponse
	18, // 26: mongo.MongoService.DeleteDocument:output_type -> mongo.DeleteDocumentResponse
	12, // 27: mongo.MongoService.InsertMany:output_type -> mongo.InsertManyResponse
	20, // 28: mongo.MongoService.DeleteMany:output_type -> mongo.DeleteManyResponse
	22, // 29: mongo.MongoService.CountDocuments:output_type -> mongo.CountDocumentsResponse
	21, // [21:30] is the sub-list for method output_type
	12, // [12:21] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_mongo_proto_mongo_proto_init() }
func file_mongo_proto_mongo_proto_init() {
	if File_mongo_proto_mongo_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_mongo_proto_mongo_proto_rawDesc), len(file_mongo_proto_mongo_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_mongo_proto_mongo_proto_goTypes,
		DependencyIndexes: file_mongo_proto_mongo_proto_depIdxs,
		MessageInfos:      file_mongo_proto_mongo_proto_msgTypes,
	}.Build()
	File_mongo_proto_mongo_proto = out.File
	file_mongo_proto_mongo_proto_goTypes = nil
	file_mongo_proto_mongo_proto_depIdxs = nil
}
